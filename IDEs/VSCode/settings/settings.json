// Edit *hard-linked* version of this file using VSCode to get validation as well as documentation when hovering over keys.
// (Use version in repo to view diff.)
{
    "window.autoDetectColorScheme": true,

    "workbench.startupEditor": "newUntitledFile",
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "workbench.tree.indent": 25,
    "workbench.panel.defaultLocation": "right",  // Terminal on the right, not bottom

    "editor.rulers": [80, 100],
    "editor.renderWhitespace": "all",
    "editor.minimap.enabled": false,
    "editor.acceptSuggestionOnEnter": "on",
    "editor.accessibilitySupport": "off",

    // Replace tabs with spaces by default, but detect indentation. Thus, for files were we want tabs instead (e.g., Makefiles), we only have to manually change
    // to tabs on initial file creation. The preferred solution would be to override this setting by language, but I did not find a way to do this for `make`.
    "editor.detectIndentation": true,
    "editor.insertSpaces": true,


    "terminal.integrated.profiles.linux": {
        // Default
        // - conda is not on Path
        // - Load IDE-specific env variables
        "BashWithoutConda": {
            "path": "bash",
            "args": [
                "--init-file",
                "~/.env_IDE"
            ]
        },
        // For projects where conda is used, make this the default shell in workspace settings.
        // Todo: create template and start tracking it in git
        "BashWithConda": {
            "path": "bash",
            "args": [
                "--init-file",  // This file should also source ~/.env_IDE
                "~/projects/utils_and_configs/python/initialize_conda.sh"
            ]
        }
    },
    "terminal.integrated.profiles.windows": {
        "Git Bash": {
            "source": "Git Bash"
        },
        "BashWithConda": {
            "path": "${env:HOMEPATH}\\AppData\\Local\\Programs\\Git\\bin\\bash.exe",
            "args": [
                "--init-file",
                "~/projects/utils_and_configs/python/initialize_conda.sh"
            ]
        },
    },
    // Default profile does not have conda initialized to prevent interference with standard Python
    "terminal.integrated.defaultProfile.linux": "BashWithoutConda",
    "terminal.integrated.defaultProfile.windows": "Git Bash",
    "terminal.integrated.defaultProfile.osx": "bash",
    "terminal.integrated.enableMultiLinePasteWarning": false,
    "terminal.integrated.inheritEnv": true,  // New shells inherit env from VSCode. (No effect on Windows)

    "python.languageServer": "Pylance",
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.inlayHints.functionReturnTypes": true,
    "python.analysis.inlayHints.variableTypes": true,
    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter",  // "ms-python.autopep8",
        "editor.formatOnType": true,
        "editor.formatOnSave": true,
    },
    "pylint.showNotifications": "onError",

    "jupyter.contextualHelp.detailLevel": "verbose",
    "jupyter.notebookRunGroups.enabled": false,
    "jupyter.notebookRunGroups.groupCount": 3,
    "jupyter.debugJustMyCode": false,
    "notebook.showFoldingControls": "always",
    "notebook.lineNumbers": "on",
    "notebook.diff.ignoreMetadata": true,

    "[markdown]": {
        "editor.formatOnSave": true,
        "editor.wordWrap": "on",
    },

    // "vsintellicode.features.python.deepLearning": "enabled",  // deprecated?

    "git.autofetch": true,
    "git.ignoreWindowsGit27Warning": true,
    "git.suggestSmartCommit": false,
    "scm.defaultViewMode": "tree",  // How to group modified files in source control view
    "gitlens.graph.dimMergeCommits": true,
    "gitlens.views.worktrees.files.layout": "list",
    "gitlens.views.branches.branches.layout": "list",
    "gitlens.gitCommands.skipConfirmations": [
        "fetch:command",
        "stash-push:command",
        "switch:command",
        "branch-create:command"
    ],

    // Fix whitespaces before saving to avoid spurrious diffs and to easier identify duplications
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,  // If more than one
        "yaml.customTags": [
            "!And",
            "!And sequence",
            "!If",
            "!If sequence",
            "!Not",
            "!Not sequence",
            "!Equals",
            "!Equals sequence",
            "!Or",
            "!Or sequence",
            "!FindInMap",
            "!FindInMap sequence",
            "!Base64",
            "!Join",
            "!Join sequence",
            "!Cidr",
            "!Ref",
            "!Sub",
            "!Sub sequence",
            "!GetAtt",
            "!GetAZs",
            "!ImportValue",
            "!ImportValue sequence",
            "!Select",
            "!Select sequence",
            "!Split",
            "!Split sequence"
        ],
        "redhat.telemetry.enabled": false,
        "security.workspace.trust.untrustedFiles": "open",
        "files.autoSave": "afterDelay",
        "editor.inlineSuggest.enabled": true,
        "workbench.colorTheme": "Visual Studio Light",
        "git.openRepositoryInParentFolders": "always",
		"diffEditor.ignoreTrimWhitespace": false,
		"workbench.preferredLightColorTheme": "Visual Studio Light",

		"terraform.experimentalFeatures.validateOnSave": true,
		"[terraform]": {
			"editor.defaultFormatter": "hashicorp.terraform",
			"editor.formatOnSave": true,
			"editor.formatOnSaveMode": "file"
		  },
		  "[terraform-vars]": {
			"editor.defaultFormatter": "hashicorp.terraform",
			"editor.formatOnSave": true,
			"editor.formatOnSaveMode": "file"
		  }
	}
