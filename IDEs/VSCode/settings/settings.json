// Edit *hard-linked* version of this file using VSCode to get validation as well as documentation when hovering over keys.
// (Use version in repo to view diff.)
{
    "window.autoDetectColorScheme": true,
    "workbench.colorTheme": "Visual Studio Light",
    "workbench.preferredLightColorTheme": "Visual Studio Light",
    "workbench.startupEditor": "newUntitledFile",
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "workbench.tree.indent": 25,
    "workbench.panel.defaultLocation": "right",  // Terminal on the right, not bottom

    "editor.rulers": [100],
    "editor.renderWhitespace": "all",
    "editor.minimap.enabled": false,
    "editor.acceptSuggestionOnEnter": "on",
    "editor.accessibilitySupport": "off",
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 105,
    // Replace tabs with spaces by default, but detect indentation. Thus, for files where we want tabs instead (e.g., Makefiles), we only have to manually change
    // to tabs on initial file creation. The preferred solution would be to override this setting by language, but I did not find a way to do this for `make`.
    "editor.detectIndentation": true,
    // Use spaces instead of tabs
    "editor.insertSpaces": true,
    "editor.inlineSuggest.enabled": true,

    // For projects where conda is used, make this the default shell in workspace settings.
    // Todo: create template and start tracking it in git
    "terminal.integrated.profiles.linux": {
        "BashWithConda": {
            "path": "bash",
            "args": [
                "--init-file",
                "~/projects/utils_and_configs/python/initialize_conda_unix.sh"
            ]
        }
    },
    "terminal.integrated.profiles.windows": {
        "Git Bash": {
            "source": "Git Bash"
        },
        "BashWithConda": {
            "path": "${env:HOMEPATH}\\AppData\\Local\\Programs\\Git\\bin\\bash.exe",
            "args": [
                "--init-file",
                "~/projects/utils_and_configs/python/initialize_conda_windows.sh"
            ]
        },
    },
    // Default profile does not have conda initialized to prevent interference with standard Python
    "terminal.integrated.defaultProfile.linux": "bash",
    "terminal.integrated.defaultProfile.windows": "Git Bash",
    "terminal.integrated.defaultProfile.osx": "bash",
    "terminal.integrated.enableMultiLinePasteWarning": false,
    // New shells inherit env from VSCode. (No effect on Windows)
    "terminal.integrated.inheritEnv": true,

    "python.languageServer": "Pylance",
    "python.analysis.typeCheckingMode": "basic",
    // Show inlay type hints, where not explicilty defined
    "python.analysis.inlayHints.functionReturnTypes": true,
    "python.analysis.inlayHints.variableTypes": true,
    "[python]": {
        // Auto formatting on save using black
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.formatOnType": false,
        "editor.formatOnSave": true,
        "files.insertFinalNewline": true,
        "black-formatter.args": [
            "--max-line-length=100"
        ],
    },
    // Activate virtual environment in integrated terminal
    "python.terminal.activateEnvironment": true,
    "jupyter.contextualHelp.detailLevel": "verbose",
    "jupyter.notebookRunGroups.enabled": false,
    "jupyter.notebookRunGroups.groupCount": 3,
    "jupyter.debugJustMyCode": false,
    "jupyter.askForKernelRestart": false,
    "notebook.showFoldingControls": "always",
    "notebook.lineNumbers": "on",
    "notebook.diff.ignoreMetadata": true,
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },
    "notebook.output.wordWrap": true,
    "notebook.output.textLineLimit": 40,
    "[markdown]": {
        "editor.formatOnSave": true,
        "editor.wordWrap": "on",
    },

    "vsintellicode.features.python.deepLearning": "enabled",  // deprecated?

    "git.autofetch": true,
    "git.confirmSync": false,
    "git.ignoreWindowsGit27Warning": true,
    "git.suggestSmartCommit": false,
    "git.openRepositoryInParentFolders": "always",
    "scm.defaultViewMode": "tree",  // How to group modified files in source control view
    "githubPullRequests.createOnPublishBranch": "never",
    "diffEditor.wordWrap": "on",
    "gitlens.graph.dimMergeCommits": true,
    "gitlens.views.worktrees.files.layout": "list",
    "gitlens.views.branches.branches.layout": "list",
    // Turning off because too often accidentally activated when trying to push (tab + enter), and Undo doesn't work
    "gitlens.ai.experimental.generateCommitMessage.enabled": false,
    "gitlens.gitCommands.skipConfirmations": [
        "fetch:command",
        "stash-push:command",
        "switch:command",
        "branch-create:command"
    ],

    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 3000,  // So that auto-formatting doesn't strip whitespace before typing next word
    "files.autoSaveWorkspaceFilesOnly": true,
    // Fix whitespaces before saving to avoid spurrious diffs and to easier identify duplications
    "files.trimTrailingWhitespace": true,
    "files.trimFinalNewlines": true,  // If more than one
    // Enabled only for Python, because in notebooks this added a newline to every cell (I did not find a way to create language-specific settings for notebooks only)
    "files.insertFinalNewline": false,

    // Files to exclude from search
    "search.exclude": {
        // Python virtual envs and other binaries in project dir
        "**/bin/": true
    },
    // Files to exclude from file explorer
    "files.exclude": {
        // Python virtual envs and other binaries in project dir
        "**/bin/": true,
        // Terraform. Note that glob expressions are more complicated than they should be (as `**` should
        // match any character incl `\`), but it didn't work otherwise. Presumably a bug in VSCode.
        "**/.terraform": true,
        "**/.terraform.*": true,
        "**/*.tfstate": true,
        "**/*.tfstate.*": true
    },
    "files.watcherExclude": {
        // Scala
        "**/.bloop": true,
        "**/.metals": true,
        "**/.ammonite": true
    },

    "security.workspace.trust.untrustedFiles": "open",

    "terraform.experimentalFeatures.validateOnSave": true,
    "terraform.experimentalFeatures.prefillRequiredFields": true,
    "terraform.codelens.referenceCount": true,
    "[terraform]": {
        "editor.defaultFormatter": "hashicorp.terraform",
        "editor.formatOnSave": true,
        "editor.formatOnSaveMode": "file"
    },
    "[terraform-vars]": {
        "editor.defaultFormatter": "hashicorp.terraform",
        "editor.formatOnSave": true,
        "editor.formatOnSaveMode": "file"
    },

    "[json]": {
        "editor.formatOnPaste": true,
        "editor.formatOnSave": true,
        "editor.quickSuggestions": {
            "strings": true
        },
        "editor.suggest.insertMode": "replace"
    },

    "remote.autoForwardPortsSource": "hybrid",
    "window.zoomLevel": -1,
}
