---
- hosts: all
  connection: "{{ connection | default('ssh') }}"  # So we can use 'local' for localhost

  vars:
    # As of Aug 2023. See https://www.hashicorp.com/official-packaging-guide
    hashicorp_key_fingerprint: 798AEC654E5C15428C8E42EEAA16FCBCA621E701


  tasks:
  - name: Upgrade all apt packages
    become: true
    apt:
      update_cache=yes
      cache_valid_time=3600
      force_apt_get=yes

    ## todo: Also add upstream for Docker: https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
  - name: Add Python repository repository from PPA and install its signing key on Ubuntu target
    apt_repository:
      repo: ppa:deadsnakes/ppa
      state: present

  - name: install common packages
    become: true
    apt:
      name:
        - unzip
        - python3.8
        - python3.9
        - python3.10
        - python3.11
        - python3.12
        - gnupg
        - software-properties-common
        - curl
        # - docker-ce
        # - docker-ce-cli
        # - containerd.io
        # - docker-buildx-plugin
        # - docker-compose-plugin
      state: latest

  - name: Add default user to `docker` group, so we can use docker w/o sudo
    become: true
    user:
      name: "{{ username }}"
      groups: "{{ username }},docker"

  - name: Create bin folder for user
    file:
      path: /home/{{ ansible_user }}/bin
      state: directory
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: '0755'


  # AWS CLI
  # -------
  - name: Make sure we don't have v1 of AWS CLI installed
    become: true
    apt:
      name:
        - awscli
      state: absent

  - name: Download AWS CLI v2, if it's not already downloaded
    unarchive:
      src: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
      dest: /home/{{ ansible_user }}/bin/
      # `creates` makes sure download is skipped if folder already exists
      creates: /home/{{ ansible_user }}/bin/aws/
      remote_src: yes
    register: aws_cli_download

  - name: Install AWS CLI v2, if it was downloaded
    become: true
    # Using the `update` flag so install does not fail in case it has been installed outside of Ansible.
    shell: bash /home/{{ ansible_user }}/bin/aws/install --update
    when: aws_cli_download.changed


  # Terraform
  # ---------
  - name: Install Hashicorp GPG key
    become: true
    shell: >
      wget -O- https://apt.releases.hashicorp.com/gpg
      | gpg --dearmor
      > /usr/share/keyrings/hashicorp-archive-keyring.gpg

  - name: Verify key fingerprint
    shell: >
      gpg --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --list-keys
      | grep -q {{ hashicorp_key_fingerprint }}
    # Note that grep fails with rc=1 if no match is found
    register: hashicorp_key_fingerprint_verified

  - name: Get Ubuntu codename (for Hashicorp repository)
    shell: lsb_release -cs
    register: ubuntu_codename

  - name: Install Hashicorp repository
    apt_repository:
      repo: >
        deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg]
          https://apt.releases.hashicorp.com {{ ubuntu_codename.stdout }} main
      state: present
    when: hashicorp_key_fingerprint_verified.rc == 0  # Just in case

  - name: Install Terraform
    become: true
    apt:
      update_cache: yes
      name:
        - terraform
      state: latest
